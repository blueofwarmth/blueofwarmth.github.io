<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hexo 搭建过程记录</title>
      <link href="/2024/06/04/Hexo-%E6%90%AD%E5%BB%BA%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95/"/>
      <url>/2024/06/04/Hexo-%E6%90%AD%E5%BB%BA%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h2 id="intro"><a href="#intro" class="headerlink" title="intro"></a>intro</h2><p>使用 GitHub Pages 来搭建 Hexo 静态博客网站，其最吸引人的莫过于<strong>完全免费使用</strong>，并且<strong>非常稳定</strong>（网络问题除外）。</p><p>距离第一次搭建hexo博客已经过去好几年了, 由于这玩意第一次部署还是稍微有点麻烦, 比较折腾, 但配置好后还是比较稳定的, 这次自己记录下全过程, 免得每次再网上搜来搜去.</p><p>为了照顾小白用户（第一次使用 GitHub 和 Hexo），尽可能详细的写（包括常见的坑和问题都有提示说明），并且多配图片。看起来有点繁杂，捋顺了其实也简单.</p><h3 id="GitHub-Pages-是什么"><a href="#GitHub-Pages-是什么" class="headerlink" title="GitHub Pages 是什么 ?"></a>GitHub Pages 是什么 ?</h3><p>GitHub Pages 是什么？具体解答可以看 GitHub 官方提供的介绍：<a href="https://docs.github.com/en/pages/getting-started-with-github-pages/about-github-pages">What is GitHub Pages? – GitHub Help</a></p><p>简单点说 GitHub Pages 是由 GitHub 官方提供的一种<strong>免费的静态站点托管服务</strong>，让我们可以在 GitHub 仓库里<strong>托管和发布自己的静态网站页面</strong>。</p><h3 id="Hexo是什么"><a href="#Hexo是什么" class="headerlink" title="Hexo是什么 ?"></a>Hexo是什么 ?</h3><p>Hexo 是一个快速、简洁且高效的<strong>静态博客框架</strong>，它<strong>基于 Node.js 运行</strong>，可以将我们撰写的 Markdown 文档快速解析渲染成静态的 HTML 网页。</p><p>官网：<a href="http://hexo.io/">hexo.io</a></p><p>详细部署方式参考：<a href="https://hexo.io/zh-cn/docs/#%E5%AE%89%E8%A3%85-Hexo">文档 | Hexo</a></p><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><h3 id="本地环境"><a href="#本地环境" class="headerlink" title="本地环境"></a>本地环境</h3><p>你需要在本地电脑上面安装：</p><ul><li>nodejs（&gt;16 版本，最新的应该有 20 版本）：<a href="https://nodejs.org/en">Node.js — Run JavaScript Everywhere</a></li><li>git（2.44.0）：<a href="https://github.com/git-for-windows/git/releases/download/v2.44.0.windows.1/Git-2.44.0-64-bit.exe">Git – Downloads</a></li></ul><p>安装的时候无脑 next 即可。安装完毕以后，可以在 cmd 里面通过：<code>node -v</code>、<code>npm -v</code> 和 <code>git --version</code> 查看安装的版本。正常情况应该有如下输出：</p><p><img src="https://myphoto-1301444197.cos.ap-chengdu.myqcloud.com/img/202406041556769.png" alt="image-20240604155645704"></p><h3 id="准备GitHUb"><a href="#准备GitHUb" class="headerlink" title="准备GitHUb"></a>准备GitHUb</h3><p>我们在 <a href="https://github.com/signup?ref_cta=Sign+up&ref_loc=header+logged+out&ref_page=/&source=header-home">GitHub</a> 上面注册一个 free 账号</p><p>网络不好的话最好开个TiZi</p><h3 id="创建一个GitHub仓库"><a href="#创建一个GitHub仓库" class="headerlink" title="创建一个GitHub仓库"></a>创建一个GitHub仓库</h3><p>我们在自己 GitHub 的主页 repository 中点击右上角的 New：</p><p><img src="https://myphoto-1301444197.cos.ap-chengdu.myqcloud.com/img/202406041558814.png" alt="image-20240604155840782"></p><p>填写基本信息</p><ul><li>Repository name 中输入<code>用户名.github.io</code>，<strong>一定要是这个名字！</strong>**</li><li>勾选 Add a README file</li><li><img src="https://myphoto-1301444197.cos.ap-chengdu.myqcloud.com/img/202406041600567.png" alt="image-20240604160045513"></li></ul><p>填好后点击 Create repository 创建仓库。</p><p>现在我们访问 <code>https://用户名.github.io</code>（我就是: blueofwarmth.github.io）可以看到默认界面：</p><p><img src="https://myphoto-1301444197.cos.ap-chengdu.myqcloud.com/img/202406041601446.png" alt="image-20240604160124409"></p><h2 id="本地测试连接GitHub"><a href="#本地测试连接GitHub" class="headerlink" title="本地测试连接GitHub"></a>本地测试连接GitHub</h2><p>在某一个盘里面创建一个文件夹，名字叫 hexo（好记），然后右键选择 Open Git Bash Here</p><p><img src="https://myphoto-1301444197.cos.ap-chengdu.myqcloud.com/img/202406041603168.png" alt="image-20240604160338145"></p><p>不出意外的话(<del>但愿没有</del>)应该会弹出一个命令行界面</p><p><img src="https://myphoto-1301444197.cos.ap-chengdu.myqcloud.com/img/202406041604482.png" alt="image-20240604160421438"></p><p>在里面输入:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;你的 GitHub 用户名&quot;</span><br><span class="line">git config --global user.email &quot;你的 GitHub 邮箱&quot;</span><br></pre></td></tr></table></figure><h3 id="创建SSH密钥"><a href="#创建SSH密钥" class="headerlink" title="创建SSH密钥"></a>创建SSH密钥</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;你的 GitHub 邮箱&quot;</span><br></pre></td></tr></table></figure><p>什么都不用管，猛猛回车就行。然后我们进入 <code>C:\Users\ 用户名 \.ssh</code> 目录（勾选显示 “隐藏的项目”）</p><p>我们<strong>用记事本</strong>打开<code>id_rsa.pub</code>并<strong>复制里面的内容</strong>。</p><p><img src="https://myphoto-1301444197.cos.ap-chengdu.myqcloud.com/img/202406041607402.png" alt="image-20240604160711364"></p><h3 id="在GitHub中添加SSH密钥"><a href="#在GitHub中添加SSH密钥" class="headerlink" title="在GitHub中添加SSH密钥"></a>在GitHub中添加SSH密钥</h3><p>回到 GitHub，进入 <strong>Settings</strong>：</p><img src="https://myphoto-1301444197.cos.ap-chengdu.myqcloud.com/img/202406041607003.png" alt="image-20240604160752962" style="zoom:50%;" /><p>选择左边栏的 SSH and GPG keys，点击 New SSH key：</p><p><img src="https://myphoto-1301444197.cos.ap-chengdu.myqcloud.com/img/202406041608650.png" alt="image-20240604160822595"></p><p>Title 随便取，然后把 id_rsa.pub 里面的内容到复制到 Key 中， 默认设置, 然后点击 Add SSH key</p><p>保存完毕以后，我们可以在本地验证一下连接</p><h3 id="验证连接"><a href="#验证连接" class="headerlink" title="验证连接"></a>验证连接</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>出现 “Are you sure……”，输入 yes 回车确认。</p><p>若出现下图的提示即连接成功：</p><p><img src="https://myphoto-1301444197.cos.ap-chengdu.myqcloud.com/img/202406041609160.png" alt="image-20240604160948127"></p><h2 id="本地安装Hexo"><a href="#本地安装Hexo" class="headerlink" title="本地安装Hexo"></a>本地安装Hexo</h2><p>我们在已经创建好的文件夹内，同样右键点击 Open Git Bash Here，然后使用 npm 安装 Hexo。在命令行中输入：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>由于网络问题，安装时间可能会有点久。这段时间里面界面不会有任何反应，请<strong>耐心等待</strong>，安装完成后会提示：</p><p><img src="https://myphoto-1301444197.cos.ap-chengdu.myqcloud.com/img/202406041639028.png" alt="image-20240604163926954"></p><p>检查一下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo -version</span><br></pre></td></tr></table></figure><h3 id="初始化Hexo"><a href="#初始化Hexo" class="headerlink" title="初始化Hexo"></a>初始化Hexo</h3><p>我们在创建好的 hexo 文件夹内，<strong>再</strong>新建一个文件夹用来存放 hexo 博客程序。</p><p>然后在上面的命令行窗口（git）中输入</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo init # 初始化hexo</span><br><span class="line">npm install # 安装组件</span><br></pre></td></tr></table></figure><p>由于网络问题，初始化的时间可能会有点久，耐心等待即可。当出现下图提示的时候，说明已经完成了</p><p><img src="https://myphoto-1301444197.cos.ap-chengdu.myqcloud.com/img/202406041640352.png" alt="image-20240604164038302"></p><p>初始化完毕以后，我们可以在 hexo 程序文件夹中看到 hexo 程序文件。</p><p><img src="https://myphoto-1301444197.cos.ap-chengdu.myqcloud.com/img/202406041640445.png" alt="image-20240604164055413"></p><h3 id="预览效果"><a href="#预览效果" class="headerlink" title="预览效果"></a>预览效果</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo g   # 生成页面</span><br></pre></td></tr></table></figure><p>生成页面需要等待一会儿，一般一两秒就完成了。</p><p>现在生成的是默认的 hexo 博客（主题），我们可以先本地访问一下看看效果。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo s   # 启动预览</span><br></pre></td></tr></table></figure><p>如果提示是否允许专用网络啥的，直接允许就可以。然后我们访问 <code>http://localhost:4000</code> 就可以访问 hexo 了：</p><p><img src="https://myphoto-1301444197.cos.ap-chengdu.myqcloud.com/img/202406041641132.png" alt="image-20240604164154040"></p><h2 id="上传Hexo到Github"><a href="#上传Hexo到Github" class="headerlink" title="上传Hexo到Github"></a>上传Hexo到Github</h2><p>我们需要先安装 <strong>hexo-deployer-git</strong>：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>然后修改_config.yml 文件末尾的 Deployment 部分：</p><p><img src="https://myphoto-1301444197.cos.ap-chengdu.myqcloud.com/img/202406041642460.png" alt="image-20240604164239423"></p><p>在这里:</p><p><img src="https://myphoto-1301444197.cos.ap-chengdu.myqcloud.com/img/202406041643106.png" alt="image-20240604164301072"></p><p>修改成&#96;&#96;如下（修改为你的用户名与仓库名）</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:blueofwarmth/blueofwarmth.github.io.git</span><br><span class="line">  branch: gh-pages</span><br></pre></td></tr></table></figure><p>其实就是通过 SSH 进行连接，SSH 连接地址可以 直接在仓库 <code>&lt;&gt;Code</code> 里面看到：</p><p><img src="https://myphoto-1301444197.cos.ap-chengdu.myqcloud.com/img/202406041643885.png" alt="image-20240604164341854"></p><p>保存修改, 然后上传</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo d</span><br></pre></td></tr></table></figure><p>出现下面的提示说明已经把网站上传到 GitHub 了：</p><p><img src="https://myphoto-1301444197.cos.ap-chengdu.myqcloud.com/img/202406041645850.png" alt="image-20240604164500790"></p><p>如果出错了就检查下配置文件内容, GitHub仓库名这些.</p><p>然后我们需要在库设置（Repository Settings）中将默认分支设置为<code>_config.yml</code> 配置中的分支名称。</p><p><img src="https://myphoto-1301444197.cos.ap-chengdu.myqcloud.com/img/202406041645151.png" alt="image-20240604164544089"></p><p>然后在 pages 页面调整源分支：</p><p><img src="https://myphoto-1301444197.cos.ap-chengdu.myqcloud.com/img/202406041645911.png" alt="image-20240604164553879"></p><p>不出意外的话是不会出意外的，<strong>稍等片刻</strong>我们访问<code>用户名.github.io</code>（比如夜梦这里就是 <code>blueofwarmth.github.io</code>）就可以看到默认 hexo 了。</p><p><img src="https://myphoto-1301444197.cos.ap-chengdu.myqcloud.com/img/202406041646045.png" alt="image-20240604164620986"></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端三大件 0-1</title>
      <link href="/2024/06/04/%E5%89%8D%E7%AB%AF%E4%B8%89%E5%A4%A7%E4%BB%B6-0-1/"/>
      <url>/2024/06/04/%E5%89%8D%E7%AB%AF%E4%B8%89%E5%A4%A7%E4%BB%B6-0-1/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
            <tag> CSS </tag>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>热河</title>
      <link href="/2022/10/30/%E7%83%AD%E6%B2%B3/"/>
      <url>/2022/10/30/%E7%83%AD%E6%B2%B3/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>关于我们</title>
      <link href="/2022/05/08/%E5%85%B3%E4%BA%8E%E6%88%91%E4%BB%AC/"/>
      <url>/2022/05/08/%E5%85%B3%E4%BA%8E%E6%88%91%E4%BB%AC/</url>
      
        <content type="html"><![CDATA[<h1 id="先看片"><a href="#先看片" class="headerlink" title="先看片"></a>先看片</h1><h3 id="人像作品展示"><a href="#人像作品展示" class="headerlink" title="人像作品展示"></a><a href="https://www.bilibili.com/read/cv16615924?spm_id_from=333.999.0.0">人像作品展示</a></h3><h3 id="其他作品"><a href="#其他作品" class="headerlink" title="其他作品"></a><a href="https://www.bilibili.com/video/BV1b44y1s79u?spm_id_from=333.999.0.0">其他作品</a></h3><h1 id="关于我们"><a href="#关于我们" class="headerlink" title="关于我们"></a>关于我们</h1><h2 id="摄影师"><a href="#摄影师" class="headerlink" title="摄影师"></a>摄影师</h2><h3 id="Qyingli"><a href="#Qyingli" class="headerlink" title="Qyingli"></a>Qyingli</h3><ul><li>一个喜欢数码科技的有个成为Rock Star的幻想的九流臭拍照的人。</li><li>母胎单身。</li></ul><p>来张中二的他拍图</p><img src="https://s2.loli.net/2022/05/14/slpqyt28JLrgchf.jpg" alt="mmexport1629782431704" style="zoom:50%;" /><h3 id="FanC"><a href="#FanC" class="headerlink" title="FanC"></a>FanC</h3><ul><li>本想与诗歌相伴，却跌落美食的深渊，无法自拔。</li><li>心系白椿，蜀葵谁会。</li></ul><h1 id="服务内容"><a href="#服务内容" class="headerlink" title="服务内容"></a>服务内容</h1><h2 id="相关内容会有更新补充，烦请关注"><a href="#相关内容会有更新补充，烦请关注" class="headerlink" title="相关内容会有更新补充，烦请关注"></a>相关内容会有更新补充，烦请关注</h2><h2 id="拍摄"><a href="#拍摄" class="headerlink" title="拍摄"></a>拍摄</h2><h3 id="设备"><a href="#设备" class="headerlink" title="设备"></a>设备</h3><ul><li>相机：<ol><li>全画幅 佳能6D单反</li><li>APSC画幅 佳能80D单反</li></ol></li><li>镜头：<ol><li>50mm F1.8 人像镜头</li><li>24-105mm F4 变焦镜头</li></ol></li><li>三脚架</li></ul><h2 id="照片"><a href="#照片" class="headerlink" title="照片"></a>照片</h2><p>毕业季留下自己美好的回忆，记录自己略带遗憾的青春</p><p>全体毕业照：多年之后再次翻看，回想与大学同窗的点点滴滴</p><p>学士服的纪念：将刹那的青春变成永恒，那年，那人，那些。</p><p>个人写真：最美好的青春，值得纪念</p><h3 id="底片"><a href="#底片" class="headerlink" title="底片"></a>底片</h3><ul><li>所有底片全部简修</li></ul><h3 id="精修"><a href="#精修" class="headerlink" title="精修"></a>精修</h3><ul><li>精修数量15张</li></ul><h3 id="交片"><a href="#交片" class="headerlink" title="交片"></a>交片</h3><ul><li>拍摄完成后一周内交付</li></ul><h1 id="费用"><a href="#费用" class="headerlink" title="费用"></a>费用</h1><ul><li><p>班级单位</p></li><li><p>349CNY&#x2F;单</p></li><li><p>个人写真</p></li><li><p>99CNY&#x2F;单</p></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>VS Code配置学习笔记</title>
      <link href="/2022/03/06/VS%20Codo%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2022/03/06/VS%20Codo%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="写在开始"><a href="#写在开始" class="headerlink" title="写在开始"></a>写在开始</h1><blockquote><p>劝退提醒：如果你只是学习C，不想特别麻烦的配置，那么我建议去官网下在新版visual studio，或者使用国内大牛改进的Dev-C++小熊猫C++。两者链接如下：</p><p><a href="https://visualstudio.microsoft.com/zh-hans/downloads/">下载 Visual Studio Tools - 免费安装 Windows、Mac、Linux (microsoft.com)</a></p><p><a href="https://royqh1979.gitee.io/redpandacpp/">小熊猫C++ (gitee.io)</a></p></blockquote><p>为什么我喜欢使用VS Code？<br>对于刚起步学习，其实只需要做到好看，好用就可以了，而VS Code正好满足了这两点。</p><ol><li>体积小，打开速度飞快</li><li>巨多的插件可供下载，满足自定义需求！！！</li><li>清爽的界面！！！满足你的码农梦！！！</li><li>支持云端保存配置</li><li>支持多种高级语言（虽然现在用不到）</li></ol><h1 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h1><p>官网下载：<a href="https://code.visualstudio.com/download">Download Visual Studio Code - Mac， Linux， Windows</a></p><p>或者可以在联想应用商店下载。</p><p>安装时可以将所有勾都打上<br><img src="https://gitee.com/qyingli/pictureonline/raw/master/image-20220306201421167.png" alt="image-20220306201421167" style="zoom:67%;" /></p><p>第一次安装完成后一般会在右下角提示你安装中文插件，点击安装重启软件即可</p><blockquote><p>如果你没有看到提示的话，也可以在拓展市场搜索Chinese安装,就是点左边那个四个方框的东西。</p></blockquote><p><img src="https://gitee.com/qyingli/pictureonline/raw/master/image-20220306201236032.png" alt="image-20220306201236032"></p><p><img src="https://gitee.com/qyingli/pictureonline/raw/master/image-20220306201246965.png" alt="image-20220306201246965"></p><h1 id="打开文件夹"><a href="#打开文件夹" class="headerlink" title="打开文件夹"></a>打开文件夹</h1><p>在VS Code里面写C代码不像在Dev一样是新建项目，而是使用打开<strong>文件夹</strong>，之后的调式配置文件等都放在文件夹当中，即不打开文件夹就不能使用调式（因为那样就没有配置文件了嘛）。</p><p>这里我建议你在硬盘新建一个文件夹专门存放C相关的文件，比如叫做VsCode_C（不要有中文）。</p><p>然后点击打开文件夹，再点击添加到信任。</p><img src="https://gitee.com/qyingli/pictureonline/raw/master/image-20220306201216402.png" alt="image-20220306201216402" style="zoom:67%;" /><h1 id="搭建C-C-环境"><a href="#搭建C-C-环境" class="headerlink" title="搭建C&#x2F;C++环境"></a>搭建C&#x2F;C++环境</h1><p>如果，我是如果现在你在文件夹下新建一个名为hello的C文件，然后码上这些内容：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Hello, fucking world!&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果是Dev的话运行代码会提示你少打了一个“;”，但在Vs Code中现在你没有这个机会，因为你会发现你压根没有办法运行这段代码，更不用提报错了。</p><p>当然不是因为我们的操作有误，而是因为Vs Code本事并不是一个像Dev-C++一样的编译器，而是一个<strong>编辑器</strong>。<br>如果你读了<del>全网黑的</del>谭浩强的C程序设计第一章的话应该对这俩个东西有点印象，如果没有的话……那还楞着干嘛呀，愣着呀！</p><p>咳，回到正题。<br>编辑器你可以把他理解为一个”Word“，他只是提供给你一个写代码的平台，其本身并不能不运行它，因为对于电脑而言，这些东西它丫根本不认识，你必须想办法把这段很看起来无聊的代码翻译成电脑能看的懂得二进制机器码，而干这个事就叫编译器。<br>也就是把源文件-&gt;可执行文件的这个过程。</p><p>现在我们知道了，因为Vs Code它只是一个编辑器，不包含编译功能，因此我们需要自己安装编译器、调试器等编译套件，使两者结合起来，这个过程就是搭建环境。</p><p>在Windows平台<strong>编译套装</strong>一般都使用Mingw。</p><blockquote><p>GCC,全称GNU Complier Collertion，意思时GNU编译套件。<br>不过不是原版的GCC，而是它在Windows下的特制版<strong>MinGW</strong>(全称Minimalist GNU on Windows）。它实际上是将GCC 移植到了 Windows 平台下，并且包含了 Win32API ，因此可以将源代码编译为可在 Windows 中运行的可执行程序。而且还可以使用一些 Windows 不具备的，Linux平台下的开发工具。</p></blockquote><p>这里建议在联想应用商店下载<a href="https://link.zhihu.com/?target=https://lestore.lenovo.com/detail/L101412">TDM-GCC - 联想软件商店</a>，这样你就不用手动下载文件包再去配置环境变量了。</p><blockquote><p>环境变量是 Windows 系统中用来指定运行环境的一些参数，它包含了关于系统及当前登录用户的环境信息字符串。当用户运行某些程序时，系统除了会在当前文件夹中寻找某些文件外，还会到环境参数的默认路径中去查找程序运行时所需要的系统文件。</p></blockquote><p>在安装的时候取消勾选检查更新，在国内速度非常慢，当然如果你有梯子的话，这个我们后面再说。。。<br><img src="https://gitee.com/qyingli/pictureonline/raw/master/image-20220306154527931.png" alt="image-20220306154527931" style="zoom:50%;" /></p><h1 id="开始使用"><a href="#开始使用" class="headerlink" title="开始使用"></a>开始使用</h1><p>Mingw安装完成后，我们在你刚才新建的文件夹下新建一个名为“.vscode”的文件夹用来保存配置文件（是文件夹，不是文件，并且注意这个.），然后再新建一个文件夹保存我们平时写的代码。这两个文件夹都是在VSCODE-C这个文件夹下的。<img src="https://gitee.com/qyingli/pictureonline/raw/master/image-20220306184902299.png" alt="image-20220306184902299" style="zoom: 67%;" /></p><p>然后我们在在Exercise下新建一个C文件，比如text.c。<br>这时它会提示你安装C&#x2F;C++的拓展，如果你比较非没有出现的话，像上面一样可以自己手动搜索添加就可以了。</p><p><img src="https://gitee.com/qyingli/pictureonline/raw/master/image-20220306154852503.png" alt="image-20220306154852503"></p><p>然后码一个hello world</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Hello, fucking world!&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="调试（运行）"><a href="#调试（运行）" class="headerlink" title="调试（运行）"></a>调试（运行）</h2><p>再次强调，调试<strong>必须在一个文件夹内进行</strong>，并且文件路径不能有中文和空格。</p><p>现在我们按F5进行调试，在上面出现的选择框中选择“C++ (GBD&#x2F;LLDB)”，“gcc&#x2F;g++”就可以了，软件会自动生成文件。</p><p><img src="https://gitee.com/qyingli/pictureonline/raw/master/image-20220306165618595.png" alt="image-20220306165618595"></p><h2 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h2><h3 id="C-C-Compile-Run"><a href="#C-C-Compile-Run" class="headerlink" title="C&#x2F;C++ Compile Run"></a>C&#x2F;C++ Compile Run</h3><p>虽然通过前面的配我们已经可以运行代码了，但是我们平时练习都是一些单程序，通过调试的方法运行就显得比较麻烦，不够优雅，并且调试的速度也比较慢，看的人着急。所以我们可以借助一个拓展来实现一键编译。<br><img src="https://gitee.com/qyingli/pictureonline/raw/master/image-20220306171313541.png" alt="image-20220306171313541"></p><p>安装之后只需要按下F6就可以一键编译你写的程序。</p><h3 id="Material-Icon-Theme"><a href="#Material-Icon-Theme" class="headerlink" title="Material Icon Theme"></a>Material Icon Theme</h3><p>一个图标插件，让你的Vs Code更加帅气</p><h3 id="One-Dark-Pro"><a href="#One-Dark-Pro" class="headerlink" title="One Dark Pro"></a>One Dark Pro</h3><p>一个主题插件，更你的Vs Code更加帅气<br>有多种风格可选</p><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><h2 id="中文乱码"><a href="#中文乱码" class="headerlink" title="中文乱码"></a>中文乱码</h2><p>解决的方法有两个：</p><ol><li>不写中文（？？？）</li><li>看到左下角的设置图标没，点它，然后顶部搜索”编码“，设置文字编码格式为GBK。<br><img src="https://gitee.com/qyingli/pictureonline/raw/master/image-20220306171831547.png" alt="image-20220306171831547"></li></ol><h2 id="禅模式"><a href="#禅模式" class="headerlink" title="禅模式"></a>禅模式</h2><p>让你在coding的时候更加专注</p><p>查看-&gt;外观-&gt;禅模式</p><h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><p>这里不多说，只说几个个我写代码时最常用的。</p><ul><li><strong>代码格式化</strong>：<code>Ctrl</code> + <code>Alt</code> + <code>f</code></li><li><strong>注释选中行</strong>：<code>Ctrl</code> + <code>/</code> 如果已经注释，再按一次会取消注释</li><li><strong>缩放界面</strong>：<code>Ctrl</code> + <code>+</code>或者<code>Ctrl</code> + <code>-</code></li><li><strong>一键替换变量名</strong>：<code>F2</code> 或者 <code>Ctrl</code> + <code>F2</code>（<strong>光标位于</strong>哪个变量，其所有出现过的地方都会同时改）</li><li><strong>一键替换选中内容</strong>：<code>Ctrl</code> + <code>F2</code>（<strong>选中的内容</strong>出现过的地方都会改，相当于<code>Ctrl</code> + <code>H</code>）</li></ul><p>……</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vscode, 笔记, C/C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>windows软件推荐</title>
      <link href="/2020/01/26/%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90/"/>
      <url>/2020/01/26/%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90/</url>
      
        <content type="html"><![CDATA[<h1 id="intro"><a href="#intro" class="headerlink" title="intro"></a>intro</h1><p>因为搞机多年,从windows7一直被”教育”过来的我,可以负责人的说windos系统如果没有一些”工具类”软件辅助的话,是怎么用都不舒服,再好的硬件都是白搭.</p><p>而在列好推荐推荐单并附上安装链接后,我觉得如果就这么丢给他们话,那在这种情况下就算我再怎么说这些软件有多么多么好用,不也是百搭.<br>所以这次不如干脆来个简单梳理,说下我日常使用这些软件的感受和推荐理由,一方面对其他人使用windows可能会有更大的帮助,另一方面在以后推荐时也会更有”底气”了呢…[手动狗头]</p><p>需要注意的是下面对每款软件的看法都只是我根据自身的使用情况得出的,和你不同是非常正常的.因为就算抛开什么人生观、价值观…我们基本的使用环境和习惯就不同,所以对你来说只能作为参考.</p><h1 id="居家杀人放火必备"><a href="#居家杀人放火必备" class="headerlink" title="居家杀人放火必备"></a>居家杀人放火必备</h1><h2 id="Chrome"><a href="#Chrome" class="headerlink" title="Chrome"></a>Chrome</h2><p>关于浏览器的选择似乎一直都是windos用户讨论的一个话题,从各种全家桶浏览器到UC、猎豹、火狐,也用过一段时间Edge,最终选择了chrome,一路过来鬼知道我经历了什么. 其他浏览器这里暂不讨论,说几点我为什么选择chrome:</p><ul><li><p>界面轻便简洁; 突出的置顶标签栏、一个简洁的地址栏、隐藏的收藏栏…<a href="https://imgtu.com/i/8YIqwq"><img src="https://s1.ax1x.com/2020/03/16/8YIqwq.md.png" alt="8YIqwq.md.png"></a></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">关于chrome的UI设计,我想用两位Google设计师的话:</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>Alex Ainslie:”Chrome被设计为几乎不可见的” Joel Beukelman:”我们的设计动机是，使设计变成更加人性化的一个启动点，而不是仅仅作为搜索的技术切入点。”</p></blockquote><ul><li>浏览性能强大; 墓碑机制、、Blink、学习使用者习惯进行智能调度等机制下,我感受到的就是启动快、占用低、稳定性高…在综合性能上chrome几乎没有对手.</li><li>海量优秀插件,总有亿款适合你;</li></ul><p><a href="https://imgtu.com/i/8YjXDO"><img src="https://s1.ax1x.com/2020/03/16/8YjXDO.md.png" alt="8YjXDO.md.png"></a></p><p>有句话叫”没有插件的chrome不是真正的chrome”,听起来好像有点唬人,但确实如此.笔记、翻译、脚本、广告拦截、翻X…毫不夸张的说,chrome的插件商店比微软的应用商店有用多了.</p><ul><li>你们有的,我都有 账号数据同步、密码填充、网页翻译、进程管理、开发者工具页、好用的下载…chrome几乎满足我对浏览器的所有幻想.</li></ul><hr><p>与其说是浏览器,我觉得更像是个[系统],就是windows上最好的浏览器,没有之一.</p><h2 id="Potplayer"><a href="#Potplayer" class="headerlink" title="Potplayer"></a><a href="https://pc.qq.com/detail/14/detail_15654.html">Potplayer</a></h2><p>视频播放器那么多,我为什么推荐Potplayer?</p><h3 id="友好的开始"><a href="#友好的开始" class="headerlink" title="友好的开始"></a>友好的开始</h3><p><a href="https://imgtu.com/i/8G5029"><img src="https://s1.ax1x.com/2020/03/16/8G5029.md.png" alt="8G5029.md.png"></a></p><p>无脑安装,无需设置,打开即用; 界面UI界面、视频打开迅速、播放界面布局规整,不会有任何杂乱的东西,让你的注意力留在内容上. 我第一次用就是这样的感受,对小白非常友好;</p><h3 id="播放功能完善"><a href="#播放功能完善" class="headerlink" title="播放功能完善"></a>播放功能完善</h3><ol><li>视频、音频、字幕格式的支持属于基础中的基础,而PotPlayer的优势在于内置了多种解码器,几乎可以对所有非加密视频格式直接播放,在此基础下依然保持了小巧的体积.</li><li>视频调速或许没什么好说的,PotPlayer默认X和C为调速快捷键,最牛的是能够做到调速不调频,无论以几倍速度播放(最高12倍),声音都不会变成”小黄人”.</li><li>视频旋转虽然我几乎不用,但对于经常观看短视频的人来说会变得非常关键.</li><li>视频锐化、降噪、消色块等功能或许不经常使用,但PotPalyer都给了你选择.</li></ol><h3 id="详尽的设置菜单"><a href="#详尽的设置菜单" class="headerlink" title="详尽的设置菜单"></a>详尽的设置菜单</h3><p>前面说了PotPlayer对于大部分人都可以”安装即用”,但并不意味它功能少<a href="https://imgtu.com/i/8GHLge"><img src="https://s1.ax1x.com/2020/03/16/8GHLge.md.png" alt="8GHLge.md.png"></a></p><p>基础的界面调整,播放、字幕、音频的调整;进阶的有视频补帧、远程播放NAS视频、滤镜设置等等,进入设置后看着各种貌似很牛逼但又看不懂的参数让我觉得一切似乎都没那么简单…</p><hr><p>PotPlayer最厉害的地方在于它在简洁和复杂之间找到了一个很好的平衡点,不会劝退小白,也能留住大佬,绝对的属于居家杀人放火必备.</p><h2 id="Bandzip"><a href="#Bandzip" class="headerlink" title="Bandzip"></a><a href="https://www.bandisoft.com/bandizip/">Bandzip</a></h2><p>解压缩软件那么多,我为什么选择Bandzip?</p><h3 id="界面简洁"><a href="#界面简洁" class="headerlink" title="界面简洁"></a>界面简洁</h3><p>老牌的WinRAR免费版打开就是广告,还有那”复古”的界面和图标,而Bandzip正好相反,免费使用、无广告、简洁的界面和图标,给人第一印象不会像WinRAR那样恶劣.</p><p><a href="https://imgtu.com/i/88V476"><img src="https://s1.ax1x.com/2020/03/15/88V476.md.png" alt="88V476.md.png"></a></p><h2 id="特色功能"><a href="#特色功能" class="headerlink" title="特色功能"></a>特色功能</h2><ol><li>支持压缩包内文件修改,吹爆;</li><li>右键预览压缩包文件;<a href="https://imgtu.com/i/88Vqcd"><img src="https://s1.ax1x.com/2020/03/15/88Vqcd.png" alt="88Vqcd.png"></a></li><li>自动解压并创建文件夹，治愈了解压文件后一下子出现满屏幕文件时的痛苦;</li><li>解压速度飞快(Bandzip会先将文件解压到临时文件夹当中，然后再拷贝到你所选择的目标文件夹里,可以减少不必要的等待);</li><li>无广告;</li></ol><h2 id="dism"><a href="#dism" class="headerlink" title="dism++"></a><a href="https://pc.qq.com/detail/15/detail_24175.html">dism++</a></h2><ul><li><p>界面简单,操作门槛低.</p></li><li><p>融入系统清理、启动项管理、驱动管理等许多常用Windows设置与一身、数种系统优化工具于一体;<a href="https://imgtu.com/i/88CDR1"><img src="https://s1.ax1x.com/2020/03/15/88CDR1.md.png" alt="88CDR1.md.png"></a></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[![88Crxx.md.png](https://s1.ax1x.com/2020/03/15/88Crxx.md.png)](https://imgtu.com/i/88Crxx) </span><br></pre></td></tr></table></figure></li></ul><h1 id="效率工具"><a href="#效率工具" class="headerlink" title="效率工具"></a>效率工具</h1><h2 id="Listary"><a href="#Listary" class="headerlink" title="Listary"></a><a href="https://pc.qq.com/detail/12/detail_23272.html">Listary</a></h2><p>就搜索本身而言,这款软件我认为做到了<strong>快、准、狠</strong></p><h3 id="快"><a href="#快" class="headerlink" title="快"></a>快</h3><p>双击CTRL键就可以在任意界面呼出搜索栏的操作可以快速适应,也不会和其他软件冲突; 呼出迅速,搜索窗口简洁干净; 整个过程都是那么的优雅.</p><h3 id="准"><a href="#准" class="headerlink" title="准"></a>准</h3><p>搜索就是为了快速找到我们想要的文件,对此Listary的几个功能非常值得来说说.</p><ul><li>首字母匹配<a href="https://imgtu.com/i/83LKpD"><img src="https://s1.ax1x.com/2020/03/15/83LKpD.md.gif" alt="83LKpD.md.gif"></a></li><li>按文件类型匹配<a href="https://imgtu.com/i/83LG7t"><img src="https://s1.ax1x.com/2020/03/15/83LG7t.md.gif" alt="83LG7t.md.gif"></a></li><li>执行网页搜索,如百度搜索时只需要键入”bd＋空格＋搜索内容”,或者是天猫搜索商品并按销量排序等等等<a href="https://imgtu.com/i/8GBcrj"><img src="https://s1.ax1x.com/2020/03/16/8GBcrj.md.gif" alt="8GBcrj.md.gif"></a></li><li>快速打开常用文件夹<a href="https://imgtu.com/i/83xfmQ"><img src="https://s1.ax1x.com/2020/03/15/83xfmQ.md.gif" alt="83xfmQ.md.gif"></a></li></ul><p>其他如模糊搜索,按打开频率优先匹配等常规功能都一个不落. 详细的配置说明可以</p><h3 id="狠"><a href="#狠" class="headerlink" title="狠"></a>狠</h3><p>免费版基本拥有所有功能…其实主要是为了配合上面两位哥们儿…</p><hr><p>这么牛逼的软件windows怎么就不内置它呢?</p><h2 id="Everything"><a href="#Everything" class="headerlink" title="Everything"></a>Everything</h2><p>虽然listary可以搜索文件,但everything可以访问NTFS文件系统的USN日志,在数秒内完成搜索硬盘中的文件,并实时监测所有文件的增改情况,所有文件都可以实时显示. 对于搜索文件,强无敌.<img src="https://upload-images.jianshu.io/upload_images/21826144-184d4023085db2b8.gif?imageMogr2/auto-orient/strip" alt="GIF"></p><h2 id="Feem"><a href="#Feem" class="headerlink" title="Feem"></a>Feem</h2><p>可以在多设备之间传输文件,快速共享文本,图片和文件,并且延迟极低.</p><p>(微软应用商店搜索下载)<a href="https://imgtu.com/i/88SP5n"><img src="https://s1.ax1x.com/2020/03/15/88SP5n.md.jpg" alt="88SP5n.md.jpg"></a></p><h2 id="Quick-look"><a href="#Quick-look" class="headerlink" title="Quick look"></a><a href="https://pc.qq.com/detail/5/detail_23525.html">Quick look</a></h2><p>按住空格键就可以快速预览文件;</p><p>预览过程中也可以简单编辑文件;<a href="https://imgtu.com/i/88Saad"><img src="https://s1.ax1x.com/2020/03/15/88Saad.md.gif" alt="88Saad.md.gif"></a></p><h2 id="Ditto"><a href="#Ditto" class="headerlink" title="Ditto"></a><a href="https://pc.qq.com/detail/11/detail_24411.html">Ditto</a></h2><p>剪贴板增强软件,可以复制&#x2F;粘贴多条内容.但貌似现在windows10已经原生支持历史剪贴板,win+v即可唤起,对我来说已经没必要安装了.</p><h2 id="Capslock"><a href="#Capslock" class="headerlink" title="Capslock+"></a><a href="https://cjkis.me/capslock+/#%E4%B8%8B%E8%BD%BD">Capslock+</a></h2><p>我是比较偏向”纯键盘输入”的,因为这可以让我更好的集中注意力,但键盘上的方向键离得太远,不容易盲操作,直到我发现Capslock+后,很大程度上改变了我的使用习惯.</p><p>它的设计理念就是将原本不太常用又十分顺手的 Capslock 键改造为和 Ctrl、Alt、Shift 类似的修饰键，实现文本输入增强、窗口切换、快速搜索等功能。</p><p>以文本输入为例，通过 Capslock 键配合以下辅助按键实现大部分文本操作需求，不再需要在鼠标和键盘间来回切换。</p><blockquote><ul><li><p>Capslock + E &#x2F; D &#x2F; S &#x2F; F（上 &#x2F; 下 &#x2F; 左 &#x2F; 右)</p></li><li><p>Capslock + I &#x2F; K &#x2F; J &#x2F; L（上 &#x2F; 下 &#x2F; 左 &#x2F; 右选中文字）</p></li><li><p>Capslock + W &#x2F; R（向左 &#x2F; 右删除文字）</p></li><li><p>Capslock + A &#x2F; G（光标向左 &#x2F; 右跳一个单词，对英文、代码特别有用）</p></li><li><p>Capslock + ; &#x2F; P（移动光标至行首 &#x2F; 行末）</p></li><li><p>Capslock + U &#x2F; O（选中光标至行首 &#x2F; 行末文字）</p></li><li><p>Capslock + Backspace（删除光标所在行所有文字）</p></li><li><p>Capslock + Enter（无论光标是否在行末都能新起一个换行而不截断原句子）</p></li><li><p>……</p></li></ul></blockquote><p>此外，Capslock+ 还能实现文本替换、音乐控制、文本翻译、重载程序、转义字符等更多功能，</p><p>详细的使用说明可以去<a href="https://cjkis.me/capslock+/#basicFunctions">官网</a>查看.</p><h2 id="格式工厂"><a href="#格式工厂" class="headerlink" title="格式工厂"></a><a href="http://www.pcfreetime.com/formatfactory/CN/index.html">格式工厂</a></h2><p>最熟为人知的格式转换工具.</p><p><a href="https://imgtu.com/i/8JlHg0"><img src="https://s1.ax1x.com/2020/03/16/8JlHg0.md.png" alt="8JlHg0.md.png"></a></p><ul><li>界面直观(有点丑),上手难度低;</li><li>支持文件类型多,什么都能转;</li><li>可以简单处理操作文件;</li><li>免费; 不过在我使用过程中经常会崩溃,不知道是不是BUG; 在安装时会后捆绑软件需要注意.</li></ul><h1 id="系统优化"><a href="#系统优化" class="headerlink" title="系统优化"></a>系统优化</h1><h2 id="Geek-uninstaller"><a href="#Geek-uninstaller" class="headerlink" title="Geek uninstaller"></a><a href="https://pc.qq.com/detail/8/detail_24068.html">Geek uninstaller</a></h2><p>windows在卸载软件后,总会留下一些残余文件,而geek uninstaller可以在卸载后自动扫描残留文件,完成深度卸载;</p><p>自身体积非常小,简洁纯净,并且不用安装.<a href="https://imgtu.com/i/88Czzq"><img src="https://s1.ax1x.com/2020/03/15/88Czzq.md.png" alt="88Czzq.md.png"></a></p><h2 id="Eartrumpet"><a href="#Eartrumpet" class="headerlink" title="Eartrumpet"></a>Eartrumpet</h2><p>听音乐、看电影、浏览网页媒体… 这些场景间往往都需要频繁调整音量,非常麻烦 现在Eartrumpet可以很好解决这个问题,它可以为软件单独设置音量,或者选择使用哪个麦克风,不会再因为频繁调整音量而烦恼,用了回不去系列.</p><p>(微软应用商店搜索下载)</p><p><a href="https://imgtu.com/i/88PIk4"><img src="https://s1.ax1x.com/2020/03/15/88PIk4.png" alt="88PIk4.png"></a></p><h2 id="CCleaner"><a href="#CCleaner" class="headerlink" title="CCleaner"></a><a href="https://www.ccleaner.com/ccleaner">CCleaner</a></h2><p>清理垃圾软件那么多,我为什么主要推荐CCleaner?</p><h3 id="界面简洁直观"><a href="#界面简洁直观" class="headerlink" title="界面简洁直观"></a>界面简洁直观</h3><p>它很明白自己是一清理软件,界面设计都为此服务.(比如，你可以在标题栏的位置看到自己的 电脑系统版本、处理器、内存和显卡)<a href="https://imgtu.com/i/88AcUU"><img src="https://s1.ax1x.com/2020/03/15/88AcUU.png" alt="88AcUU.png"></a></p><h3 id="“轻松”清理"><a href="#“轻松”清理" class="headerlink" title="“轻松”清理"></a>“轻松”清理</h3><p>软件左侧分布着:</p><ul><li><p>轻松清理</p><p>用起来确实很轻松,垃圾分析和清理过程都非常快,通常就是眼睛扫一遍进度条的时间.清理的内容主要是Windows资源管理器(如最近打开的文档等)、系统(如清空回收站等)、浏览器记录(如历史记录)以及高级(如IIS日志文件等)四项</p></li><li><p>自定义清理</p><p>对系统和软件使用过程中产生的无用文件有详细的分类,配合[轻松清理]基本可以告别垃圾文件.</p><p><a href="https://imgtu.com/i/88AEB6"><img src="https://s1.ax1x.com/2020/03/15/88AEB6.md.png" alt="88AEB6.md.png"></a></p></li><li><p>注册表</p><p>windows在安装软件时会生成注册表,但卸载后却会一直存在.CCleaner的注册表允许在清理之前备份,方式清理后产生故障而无法修复.</p></li><li><p>工具</p><p>里面的几个功能都挺使用的,但卸载不支持批量处理,软件更新速度奇慢,重复文件不支持一键删除…希望以后更新能加入.<a href="https://imgtu.com/i/88ESqP"><img src="https://s1.ax1x.com/2020/03/15/88ESqP.md.png" alt="88ESqP.md.png"></a></p><hr><p>CCleaner分为专业版和免费版,付费版更多优化,基础功能上没有明显区别,但都无广告.</p><h1 id="文字书写编辑"><a href="#文字书写编辑" class="headerlink" title="文字书写编辑"></a>文字书写编辑</h1></li></ul><h2 id="Typora"><a href="#Typora" class="headerlink" title="Typora"></a><a href="https://pc.qq.com/detail/1/detail_24041.html">Typora</a></h2><p>个人觉得是windows上最好的markdown编辑器.</p><h3 id="好看"><a href="#好看" class="headerlink" title="好看"></a>好看</h3><ol><li>界面简洁美观;<a href="https://imgtu.com/i/88uBJf"><img src="https://s1.ax1x.com/2020/03/15/88uBJf.md.png" alt="88uBJf.md.png"></a></li><li>多中主题选择;<a href="https://imgtu.com/i/88uKd1"><img src="https://s1.ax1x.com/2020/03/15/88uKd1.md.png" alt="88uKd1.md.png"></a></li></ol><h3 id="很”人性化”"><a href="#很”人性化”" class="headerlink" title="很”人性化”"></a>很”人性化”</h3><ol><li><p>多种语法风格选择;<a href="https://imgtu.com/i/88u4YV"><img src="https://s1.ax1x.com/2020/03/15/88u4YV.png" alt="88u4YV.png"></a></p></li><li><p>几乎完美的实时预览,真正做到了Hybrid View<a href="https://imgtu.com/i/88nRPK"><img src="https://s1.ax1x.com/2020/03/15/88nRPK.md.gif" alt="88nRPK.md.gif"></a></p></li><li><p>右键即可一键添加表格,图片(拖入图片自动添加,网络图片托入自动保存本地)</p></li><li><p>完整且好用的文件系统(导入支持多种格式文件,导出支持PDF)</p></li><li><p>专注模式,大纲&#x2F;文件侧边栏</p></li><li><p>……</p><hr></li></ol><p>并且完全免费,不过我使用过程总有时在第一次打开文件会突然卡住崩溃,不知道是不是BUG;</p><p>Typora或许不是windows下最好的markdown编辑器,但是我用的最舒服的一个.</p><h2 id="幕布"><a href="#幕布" class="headerlink" title="幕布"></a><a href="https://mubu.com/">幕布</a></h2><p>一款以<strong>层级折叠式文字</strong>来整理内容的<strong>大纲文档工具</strong></p><p>相对于传统笔记更注重逻辑性,这种形式更加清晰地展现内容之间的逻辑结构，极减少了我们整理格式的压力。 在幕布中每段内容对应一个”主题”,主题与主题之间通过层级形成联系,在这种形式下再搭配少量快捷键,无需鼠标就可以完成大部分操作.</p><p>而幕布最具特色的就是可以一键转换脑图形式(思维导图),你可以在行文完毕后思考如何进行层次化梳理,寻找文字背后的逻辑和结构关系.<a href="https://imgtu.com/i/88lGtI"><img src="https://s1.ax1x.com/2020/03/15/88lGtI.png" alt="88lGtI.png"></a></p><p>幕布目前支持网页版、iOS &amp; Android 手机客户端、Windows &amp; Mac 电脑客户端，多平台的支持上也非常给力,基本涵盖了所有常用的设备. 再加上体验良好的云同步,多设备之间的使用体验非常好.</p><p>或许幕布的开发者可能考虑到本身使用逻辑不同于传统笔记软件,初次接触可能会不太”友好”,所以在一开始给出了[软件介绍]与[入门指南]<a href="https://imgtu.com/i/8UpN7V"><img src="https://s1.ax1x.com/2020/03/17/8UpN7V.md.png" alt="8UpN7V.md.png"></a></p><p>并且里面的内容并不是上来就给你说各种使用技巧、快捷键什么的,而是让初次接触的用户先明白”幕布是什么?可以做什么?”之后再去学习使用,对于新手非常友好这点必须点赞.</p><p>我现在是将幕布作为主力笔记本,如果你之前没有使用过类似软件的话,非常值得去体验下.</p><h2 id="OneNote"><a href="#OneNote" class="headerlink" title="OneNote"></a>OneNote</h2><p>我并不使用OneNote,不是因为它不好,而是并不适合我…</p><p>OneNote最吸引我的是笔记页面:</p><blockquote><ul><li><p>它没有页面大小,拿起笔就可以尽情书写</p></li><li><p>面板高度自由,可以随意批注、图画</p></li><li><p>结构化的分类方便查找和复习.</p></li></ul></blockquote><p><a href="https://imgtu.com/i/8JNN0P"><img src="https://s1.ax1x.com/2020/03/16/8JNN0P.jpg" alt="8JNN0P.jpg"></a></p><p>并且都是在接近传统笔记本的书写体验基础下做到的,但是前提是你要有一个平板和一支笔. 而我都没有… 再加上经常抽风的云同步,所以我一般写东西会选择Typora,记笔记用幕布.</p><p>当然,提出OneNote并不是为了吐槽,不适合我并不代表不适合你,如果你还没有找到适合自己的笔记软件,不妨可以试试OneNote,这款老牌笔记软件或许会给你一些不一样的体验.</p><h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><h2 id="IDM"><a href="#IDM" class="headerlink" title="IDM"></a><a href="https://pc.qq.com/detail/16/detail_416.html">IDM</a></h2><p>是我用过最强大的下载工具. 界面简洁(虽然有点复古);结构化的组织形式<a href="https://imgtu.com/i/88EjFU"><img src="https://s1.ax1x.com/2020/03/15/88EjFU.jpg" alt="88EjFU.jpg"></a></p><p>下载文件效应快,且多数都能慢速下载;</p><p>下载文件自动分类,这点真的要吹爆;</p><p>自带chrome插件,且支持多种下载方式;</p><p>唯一的缺点就是需要付费(这是我的问题!!!)</p><h2 id="Pandownload"><a href="#Pandownload" class="headerlink" title="Pandownload"></a><a href="http://pandownload.com/">Pandownload</a></h2><p>尽管我经常骂着百度早日倒闭,但不得不承认的是百度云盘几乎变成了现在最重要的网络资源分享渠道,但官方的网盘软件在无会员的情况下几乎处于不可用的状态,而并不便宜的会员价格对于我这样使用频率并不高的人来说[性价比]太低,这时候Pandownload的出现极大程度解决了许多我使用网盘的困惑.</p><p>虽然名字中有[download],但我想说在下载方面Pandownload其实并不强大,0到2G之间的小文件下载时多数都可以跑满网速(有小概率翻车),但遇上大文件大概率会翻车导致”回到解放前”,官网给出的说明是”目前百度是针对账号进行限速的，当一个非会员账号下载量达到一定阈值就会触发限速（大概10G左右）。”</p><p>那我为什么依然推荐Pandownload?</p><p><a href="https://imgtu.com/i/8G1PS0"><img src="https://s1.ax1x.com/2020/03/16/8G1PS0.md.png" alt="8G1PS0.md.png"></a></p><p>使用网盘我们不是一上来就下载,在此之前有一个非常痛苦的过程－找资源 虽然早就一些网盘搜索网站,但需要每次打开网页,加载速度稳定性也并不省心,而Pandownload内置了两个搜索平台,资源多、查找速度快、现在寻找资源只需要”输入、过滤、保存&#x2F;下载”,让[找文件]这件事变得如此轻松;</p><p>还有如网盘文件清理,搜索历史,不错的UI,自动打开粘贴板链接,稳定的更新等附加Buff,所以对于[网盘下载],Pandownload是我用的最舒服的一个.</p><hr><p>先水到这里…</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>想说些东西,关于手机拍照</title>
      <link href="/2020/01/24/%E6%89%8B%E6%9C%BA%E6%8B%8D%E7%85%A7/"/>
      <url>/2020/01/24/%E6%89%8B%E6%9C%BA%E6%8B%8D%E7%85%A7/</url>
      
        <content type="html"><![CDATA[<h1 id="intro"><a href="#intro" class="headerlink" title="intro"></a>intro</h1><p>前几天偶然在便签中看到自己以前没拍成的一期视频逐字稿,看了遍后索性就练练手写出了这篇文章.(主要还是在家太闲了)</p><h2 id="随时随地-记录生活点滴"><a href="#随时随地-记录生活点滴" class="headerlink" title="随时随地,记录生活点滴"></a>随时随地,记录生活点滴</h2><p>抓住一些瞬间，留住一些事物，用新的视角发现周围……<del>发朋友圈装个B</del>？并不需要了解拍照的意义是什么,因为这些对我而言,其实就够了。</p><span id="more"></span><h3 id="理想的记录设备-手机"><a href="#理想的记录设备-手机" class="headerlink" title="理想的记录设备 -手机"></a>理想的记录设备 -手机</h3><p>我们拿手机拍照时，光拍的到还不够，我们也希望还能拍的好(暂且把拍不好这锅甩给设备),又摄的远…<br>这几年来大家都见证了国内社交网络媒体的发展,挑选手机时不再问“是不是真八核?”，而逐渐开始关注起拍照这事儿。厂商也顺应发展趋势一路狂赶，经历从老鸟口中的“捏个影儿”到“4000万像素徕卡”，“潜望式镜头摄月”……现在又蹦出个一亿像素，我们这看着确实是有点“唬人”😂。<br>这眼看“人民日益增长的摄影需求同辣鸡设备之间的矛盾”要解决,可多数消费者选购时还是抛出灵魂拷问，“这玩意儿是真的不？”。 这次我选出了几个常见的宣传词汇,给拿出来掰扯掰扯。</p><h1 id="那些营销词汇"><a href="#那些营销词汇" class="headerlink" title="那些营销词汇"></a>那些营销词汇</h1><hr><h2 id="8P镜头"><a href="#8P镜头" class="headerlink" title="8P镜头"></a>8P镜头</h2><p>厂商在发布会上所说的6P，7P的这个P，指的是Plastic，意思是<strong>镜头由n个塑料镜片组成</strong>.</p><p><a href="https://imgtu.com/i/3jvcUs"><img src="https://s2.ax1x.com/2020/03/07/3jvcUs.jpg" alt="镜片"></a></p><p>但事实上因为玻璃(glass)除了透光率以为,在光学折射，热膨胀系数上相比塑料都有天然优势，所以真正的好镜片应该是玻璃的,而少有厂商采用的原因也很简单——贵。😳</p><p>不过也不用担心,在手机每年几个亿的销售量下,上游供应链厂商在塑料镜片的技术进步上是非常快,如今差距远没有我们想象的大.并且我们一个消费者在手机上倒也不必在乎那个是P,那个是G,只需要知道镜片在手机相机系统中主要起到<strong>过滤杂光</strong>和<strong>矫正成像</strong>的作用,理论上<strong>镜片的工艺和成本相同的情况下，镜片的数量越多效果越牛逼</strong>.</p><h2 id="底大一级压死人"><a href="#底大一级压死人" class="headerlink" title="底大一级压死人"></a>底大一级压死人</h2><hr><h4 id="“底”很重要"><a href="#“底”很重要" class="headerlink" title="“底”很重要?"></a>“底”很重要?</h4><blockquote><p>“底”指的是手机镜头中的图像传感器.</p></blockquote><p><a href="https://imgtu.com/i/3jbX2F"><img src="https://s2.ax1x.com/2020/03/07/3jbX2F.jpg" alt="传感器感光面积大小"></a></p><p>传感器的感光面积越大能带来——捕捉更多光线，获得更强的感光性能，更优的信噪比等等,并且这些影响都是决定性的.这么看似乎的确是能“压死人”，但别忘了<strong>手机受制内部空间大小</strong>,留给传感器的空间十分有限，不可能像专业相机一样为了画质体积上可以”放飞自我”. 手机上目前“底”最大的<strong>ISOCELL Bright HMX</strong>传感器有1&#x2F;1.33英寸感光面积，对比常规的1&#x2F;2.55,1&#x2F;2英寸的感光面积，确实算大底，但就算跟残幅的APS-C相机的比,也只然是个弟弟.</p><table><thead><tr><th>型号</th><th>有效像素</th><th>感光面积（单位：英寸）</th></tr></thead><tbody><tr><td>IMX 586</td><td>8000×6000</td><td>1&#x2F;2</td></tr><tr><td>IMX 363</td><td>4032×3024</td><td>1&#x2F;2.55</td></tr><tr><td>ISOCELL Bright HMX</td><td>12032×9024</td><td>1&#x2F;1.33</td></tr><tr><td>Exmor CMOS sensor</td><td>6000×4000</td><td>1.8</td></tr></tbody></table><p>所以”底大”确实是能”压死人”,但也不要因为迷恋于传感器大小而忽略了优秀的成像素质是相机系统的<strong>综合结果</strong>.(尤其是子手机上)</p><h3 id="定制传感器"><a href="#定制传感器" class="headerlink" title="定制传感器"></a>定制传感器</h3><p>我的主观看法是<strong>定制主要解决的是现有的硬件不能满足厂商对于产品预期目标</strong>。</p><p>这事儿如果不是某某某企业高管之间的互撕，普通消费者不一定会关注. 举例来说,华为P30 Pro中定制的索尼IMX 607，将<a href="https://baike.baidu.com/item/CFA/15918447?fr=aladdin">色彩滤波阵列(CFA)</a>用感光能力更为优秀的RYYB取代原有RGBG排列的拜尔阵列(Bayer Array)，最终的结构就是夜景画质独孤求败；<br>比如iPhone 11 Pro影像系统中三摄之间默契的配合，超高的<a href="http://blog.sina.com.cn/s/blog_538c6f950102x33t.html">动态范围</a>和细节，定制传感器同样功不可没。<br>类似的还有2008年苹果和英特尔联合研发的CPU解决了轻薄本的CPU占用面积大和功耗高的问题——信封中的MacBook.<br>这些案例背后，定制的硬件固然重要，但华为有着麒麟990做背书，打磨三代后的算法；苹果有着地表最强的移动端芯片A13和计算摄影（computational photograpny）加持；所以手机要有优秀的成像素质,那<strong>算法，传感器，芯片</strong>缺一不可，如果还相信有定制传感器就能够为所欲为，那就真图样图森破了。<br>再说，我们是因为看到[结果]牛逼去关注，试想如果华为RYYB更多的是色偏，iPhone 11 Pro被千元机干翻，定制这事儿还来引来消费者关注吗？ 所以作为消费者没必要在这里费心。</p><h2 id="摄像头越多越牛？"><a href="#摄像头越多越牛？" class="headerlink" title="摄像头越多越牛？"></a>摄像头越多越牛？</h2><hr><p>为什么手机没有像相机一样只用一个镜头成像？ 答案其实很简单，因为手机不能更换镜头，<strong>很难做到像相机一样可以覆盖人眼在同一位置所看到的所有景物</strong>。</p><h3 id="综合型三摄"><a href="#综合型三摄" class="headerlink" title="综合型三摄"></a>综合型三摄</h3><p><a href="https://imgtu.com/i/3jqlPf"><img src="https://s2.ax1x.com/2020/03/07/3jqlPf.md.jpg" alt="iPhone11Pro"></a></p><p>如果以26mm广角＋52mm长焦和13mm超广角为例，三颗镜头对应的视角约为80°，46°，120°，基本覆盖了人眼的视角范围，同时三颗镜头中13mm适合风景,26mm日常,50mm人像经典焦段,应该是最为[实用]的一套配置.</p><h3 id="TOF战未来"><a href="#TOF战未来" class="headerlink" title="TOF战未来?"></a>TOF战未来?</h3><p>另外TOF镜头现在也厂商采用，如果我们搜索它的<a href="https://cn.bing.com/search?isource=infinity&iname=bing&itype=web&q=TOF%E9%95%9C%E5%A4%B4%E7%9A%84%E5%BA%94%E7%94%A8">应用</a>，你会看到如AR装修，VR游戏，全息影像……这些技术都挺牛X的，或许会再一次改变未来，但可能有点太超前了，以至于目前硬件，应用，市场都没有准备，so如果你的手机有TOF，可以想这是在为[未来]做准备。</p><h3 id="潜望式镜头"><a href="#潜望式镜头" class="headerlink" title="潜望式镜头"></a>潜望式镜头</h3><p>在手机上潜望式镜头可以做出超长焦镜头，超越人眼的视角限制，能拍到我们<strong>想拍但看不到的景象</strong>.<br><a href="https://imgtu.com/i/3jL9yQ"><img src="https://s2.ax1x.com/2020/03/07/3jL9yQ.md.jpg" alt="3jL9yQ.md.jpg"></a></p><p>再以华为P30 Pro为例来看通过潜望式镜头主要实现了什么:</p><ul><li>10X混合变焦,50X数码变焦</li><li><del>算</del>拍月亮</li></ul><p>1.在变焦上,1<del>3倍之间是通过主摄裁切实现,因为主摄本身就有4000万像素,在配合上<a href="https://qyingli.gitee.io/[https://blog.csdn.net/mandagod/article/details/54316655](https://blog.csdn.net/mandagod/article/details/54316655)">超分辨抖动算法</a>就能得到比直接裁切更高的清晰度,3</del>5倍之间再超分辨率算法的基础上把5倍长焦镜头的画面合成到中央,进一步提升清晰度,五到十倍<br>之间用长焦镜头再加超分辨率算法.<br>2.月亮模式是在变焦系统基础上做出的一个具体到使用场景的应用,通过50X数码变焦拍出一张月亮照片,再通过一套<a href="https://www.bilibili.com/video/av49632287">AI算法</a>[优化]后显示到用户屏幕上.</p><p>可以看到通过潜望式镜头＋算法可以得到远超过使用普通长焦镜头手机的变焦能力,这点上确实牛逼.But我认为在手机上高倍变焦其实不怎么重要,因为它的应用场景实在是非常有限,并且进一步挤占了内部空间不得不在体积妥协.<br>那潜望式镜头它牛逼吗?从我得知的结果来看确实牛,但我认为<strong>潜望式镜头并不适合大部分用户</strong>,而拍月亮Emmmm……</p><h3 id="手机多镜头的现状"><a href="#手机多镜头的现状" class="headerlink" title="手机多镜头的现状"></a>手机多镜头的现状</h3><p>上面说了多摄像头带来的一些进步,但事实上作为大部分人选购目标的中低端手机上,多摄像头更多是作为营销概念存在,为什么这么说呢? 我们看看在京东上1000~2500元价位销量价高的三个品牌不同机型的摄像头配置:</p><table><thead><tr><th>机型</th><th>主摄</th><th>副摄1</th><th>副摄2</th><th>副摄3</th></tr></thead><tbody><tr><td>荣耀9X</td><td>广角</td><td>景深镜头</td><td>&#x2F;</td><td>&#x2F;</td></tr><tr><td>红米K30</td><td>广角</td><td>超广角</td><td>微距镜头</td><td>景深镜头</td></tr><tr><td>RealmeX2</td><td>广角</td><td>超广角</td><td>微距镜头</td><td>景深镜头</td></tr></tbody></table><p><a href="https://imgtu.com/i/3jxARP"><img src="https://s2.ax1x.com/2020/03/07/3jxARP.jpg" alt="3jxARP.jpg"></a></p><p>红米和reamle四摄中的200万像素<a href="https://baike.baidu.com/item/%E5%BE%AE%E8%B7%9D%E9%95%9C%E5%A4%B4/2972574?fr=aladdin">微距镜头</a>画质感人(超广角镜头也可以作为微距镜头使用);<br>200万像素景深镜头(负责深度计算的，实现背景虚化,实际并不直接参与成像)可以用超广角代替(理论上只要有比主摄视角更广的镜头，都可以作为景深摄像头);<br>看似四摄,其实跟iPhone11这种双摄没什么区别,而荣耀这边[单摄]可还行?</p><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>所以<strong>摄像头越多拍照越好</strong>这种说法是非常极其相当扯淡的. 而且无论是旗舰机还是千元机,大部分照片都是由主摄一颗镜头完成的(iPhone11系列除外),画质好坏主要由主摄决定,副摄更多是起补充焦段作用,不要把多摄手机想的有多神.</p><h2 id="大光圈"><a href="#大光圈" class="headerlink" title="大光圈"></a>大光圈</h2><hr><h3 id="越大越牛"><a href="#越大越牛" class="headerlink" title="越大越牛?"></a>越大越牛?</h3><blockquote><p>表达光线通过镜头速率的参数–光圈 光圈值f&#x2F;&#x3D;焦距&#x2F;孔径</p></blockquote><p>不知道大家知否还记得初中物理的小孔成像，这个”孔”其实就是镜头中的光圈。举个经常听到的栗子，光圈好比水管的口径，光圈越大，水管口径越粗，同时间内流进的水就越多，对应到镜头就是进的光越多。</p><p><a href="https://imgtu.com/i/3jLThV"><img src="https://s2.ax1x.com/2020/03/07/3jLThV.jpg" alt="3jLThV.jpg"></a></p><p>大光圈的意义主要在于能获得更快的快门速度－手持拍摄不容易糊片,获取更多光线－提升夜景画质,更浅的景深－奶油般化开的<a href="https://baike.baidu.com/item/%E8%83%8C%E6%99%AF%E8%99%9A%E5%8C%96/1707643?fr=aladdin">背景虚化</a>.<br>但光圈并不是越大越好，大光圈会导致中心画面发红，边缘画质下降，锐度降低，落到照片上就是观感比较”肉”,并且是大底＋大光圈会放大<a href="https://baike.baidu.com/item/%E7%84%A6%E5%B9%B3%E9%9D%A2/10573982?fr=aladdin">焦平面</a>不平的现象,表现到实际场景中就是拍文档时边缘文字会变模糊.但手机传感器比较小,使得这些负面影响都不明显,最重要的是由于<strong>手机光圈基本都是固定不可调节的</strong>,所以在手机上大光圈即正义.</p><h3 id="等效光圈"><a href="#等效光圈" class="headerlink" title="等效光圈"></a>等效光圈</h3><p>关于光圈再多说两句,我们平时看到的光圈值只是一个系数,实际进光量多少需要以入射光瞳直径衡量,即同样的虚化效果需要同样的入射光瞳直径.</p><blockquote><p>入射光瞳直径&#x3D;焦距&#x2F;光圈系数</p></blockquote><p>举例来说传感器尺寸为1&#x2F;2.3英寸的手机上,26mm焦距下F1.8的光圈带来的虚化效果相当于全画幅相机的F11,差距非常明显。 所以手机上实现的背景虚化大多时候都是通过算法模拟,而不是靠大光圈.</p><h2 id="一亿像素方向错了？"><a href="#一亿像素方向错了？" class="headerlink" title="一亿像素方向错了？"></a>一亿像素方向错了？</h2><hr><h4 id="像素越高画质越好是错的"><a href="#像素越高画质越好是错的" class="headerlink" title="像素越高画质越好是错的"></a>像素越高画质越好是错的</h4><p>传感器横向像素数×纵向像素数得出的称为有效像素，粗略换算后也就是我们口中所说的多少多少万像素，理论上像素越高，就能扑捉到－更多细节，照片也就会越清晰。</p><p><a href="https://imgtu.com/i/3jj1Ts"><img src="https://s2.ax1x.com/2020/03/07/3jj1Ts.jpg" alt="3jj1Ts.jpg"></a></p><blockquote><p>像素:指在由一个数字序列表示的图像中的一个最小单位。</p></blockquote><blockquote><p>分辨率:指单位长度内像素点的数量，单位通常为像素&#x2F;英寸（ppi）</p></blockquote><blockquote><p>单个像素面积*像素数量 &#x3D; 传感器感光总面积</p></blockquote><p>Ｂut，这得加一个条件——光线充足.<br>前面说过手机由于内部空间是固定的,传感器尺寸提升空间有限,那通过上面公式我就可以知道,传感器感光面积不变时增加像素总数的结果就是<strong>单像素感光面积变小</strong>,这样相机在低照度条件下因为获取不到足够的光线,”看东西”就会不清晰,再谈细节就变得毫无意义.</p><blockquote><p>单像素感光面积&#x3D;传感器感光面积&#x2F;像素数量</p></blockquote><p>拿厂商们用了一年的传感器IMX586来说,虽然像素数远高于以往普通传感器,但是单像素感光面积其实很小(0.8um),但是IMX586的默认会<a href="https://zhuanlan.zhihu.com/p/35227201">像素四合一</a>(1.6um)后以1200万模式输出,但是这样在细节上其实和普通手机拉不开差距,但是你可以强开4800万模式,但是暗光画质会遭重创…<br>(太多但是写法有点<del>抄袭</del>致敬*<a href="https://frankseptillion.com/">王跃琨</a>*)</p><h3 id="像素数或许没你想得那么重要"><a href="#像素数或许没你想得那么重要" class="headerlink" title="像素数或许没你想得那么重要"></a>像素数或许没你想得那么重要</h3><p>大多数人要的并不是高像素,而是高细节.<br>所以我们只需要理解,照片细节主要取决于<strong>像素数量和每个像素的清晰度</strong>.<br>像素清晰度&#x3D;进光量,而进光量取决单像素感光面积,而单像素感光面积其实取决于传感器感光面积,所以厂商选择IMX586并不是应为它像素高,而是因为底大,在手机上<strong>高像素只是大底带来的一个副产品</strong>.</p><p>而像素数量我想说的是,在我们的生活环境中,现在的手机拍出的照片画面细节往往都是超预期的呈现给你,相机画质的瓶颈早就不再是像素数量.<br>为什么这么说呢? 我们的手机屏幕(1080P)只有约200万像素,你家的4K电视也不过800万像素,电影院放映的电影普遍也只有400万像素,而你在看时有没有觉得显示不清晰呢?就算是有着惊为天人显示效果的<a href="https://www.apple.com.cn/pro-display-xdr/">Pro Display XDR</a>屏幕像素数都不到1200万,所以明白了吗???<br>至于一亿像素方向错没错,你应该自己做出判断. 这里最后,希望你能明白 <strong>优秀的照片不是因为放大多少倍以后还能看清细节而被人们记住的.</strong></p><p><a href="https://imgtu.com/i/3jDhdI"><img src="https://s2.ax1x.com/2020/03/07/3jDhdI.jpg" alt="3jDhdI.jpg"></a></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><hr><p>首先,很高兴你直接从Inor[拖]到总结,完美的忽略了我.<br><a href="https://imgtu.com/i/3jveE9"><img src="https://s2.ax1x.com/2020/03/07/3jveE9.jpg" alt="3jveE9.jpg"></a></p><p>看完上面内容,那先来个简单的总结:</p><ol><li>单单是高像素,或者是多摄像头,又或者是大底,都不能得出优秀的拍摄素质.</li><li>无论是手机,还是相机,优秀的拍摄素质都是镜头,光圈,传感器,算法等等一套<strong>拍摄系统</strong>的综合结果.(而手机相比相机硬件提升空间处于劣势,在强大算力支撑下的软件算法就是其优势,并已经开始有弯道超车的势头)</li><li>手机的相机系统往往没有绝对的好坏,适合你的才是最好的.</li></ol><p><a href="https://imgtu.com/i/3vSRPA"><img src="https://s2.ax1x.com/2020/03/07/3vSRPA.md.jpg" alt="3vSRPA.md.jpg"></a></p><p>最后对于好的[拍照手机]?大家可以参考爱否的<a href="https://www.bilibili.com/video/av77163203?t=151">这期视频</a>前半段.</p><blockquote><ul><li><p>更多的焦段覆盖</p></li><li><p>更漂亮的色彩</p></li><li><p>更准的曝光和宽容度</p></li><li><p>更好的虚化效果</p></li></ul></blockquote><p>写这篇文章的主要目的,就是想<del>装装逼</del>通过一些常见的营销词汇来对相机拍照的一些基础知识进行简单梳理,能让大家不再被各种参数看蒙蔽,不再轻易被厂商的宣传搞昏了头了,毕竟授人以鱼不如授之以渔.如果你通过这篇文章对拍照产生了点兴趣那<em>我们是同志了</em>.</p><h1 id="尾巴"><a href="#尾巴" class="headerlink" title="尾巴"></a>尾巴</h1><p>写尾巴开始是都点纠结的,经历过一会儿心理斗争,最后还是没忍住写了出来!<br>毕竟能坚持看到这儿的是有耐心的,不怕我啰嗦的<br><a href="https://imgtu.com/i/3zDqbQ"><img src="https://s2.ax1x.com/2020/03/08/3zDqbQ.png" alt="3zDqbQ.png"></a></p><p><a href="https://imgtu.com/i/3zaHRU"><img src="https://s2.ax1x.com/2020/03/08/3zaHRU.md.jpg" alt="3zaHRU.md.jpg"></a></p><p>看到它不知道你会想起什么,这是以前在老房子厕所旁用手机拍的.<br>从摄影技法上来说,没什么构图,也看不出什么章法,但对我而言却有着重要的意义.画面中长满苔藓苔藓墙上的破砖瓦,一旁的烂泥墙,从中住着长大,不知修补过多少次的瓦房…在拍摄时我完全没有想到这些承载着过去记忆的事物会这么快便从我的生活中消失,如今看到照片会觉得自己很幸运,因为照片帮我留住一些片段.</p><p>对于拍照,现在我只能说:<br>手中的设备怎么样,所处生活的<em>环境</em>如何,是否了解摄影技法,这都不怎么重要,重要的是有没有去[发现],去[记录];<br>手中的设备会变,生活环境会变,对摄影技法的了解会变,不变的是照片的情感表达.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>我的第一篇博客</title>
      <link href="/2020/01/19/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
      <url>/2020/01/19/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<p>I’m a little used to wandering outside the rain.</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
